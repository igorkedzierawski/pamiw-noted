events {
    worker_connections 1024;
}
http {
    server {
        listen 80;
        
        #set $BACKEND_ORIGIN "http://backend:8080";
        #set $BACKEND_ORIGIN "http://host.docker.internal:8080";
        #set $FRONTEND_ORIGIN "http://frontend:4200";
        
        # restapi config
        location ^~ /api/ {
            # Podmiana hosta, żeby redirect na /login działał
            # (choć tbh nie wiem to powinien to robić front czy backend)
            proxy_set_header Host $host;
            proxy_pass http://backend:8080/api/;
            #error_page 302 = @trash_can;
            #error_page 301 303 307 = @trash_can;
        }
        
        # oauth2 config
        # Podmiana hosta, żeby backend poprawnie redirectował
        # podczas uwierzytelniania przez oauth2
        location ^~ /oauth2/ {
            proxy_set_header Host $host;
            proxy_pass http://backend:8080/oauth2/;
        }
        location ^~ /login/oauth2/ {
            proxy_set_header Host $host;
            proxy_pass http://backend:8080/login/oauth2/;
        }

        # frontend config
        location / {
            # angularowi chyba nie potrzebny host (narazie)
            proxy_pass http://frontend:4200;
        }

        location /ng-cli-ws {
                proxy_pass http://frontend:4200;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $host;
        }
        
        
        location @trash_can {
            # Respond with an empty 200 OK
            return 200;
        }
        
    }
    
}
